/*
 * Hardware.h
 *
 *  Created on: Jun 26, 2017
 *      Author: cryog
 */

#ifndef SRC_HARDWARE_H_
#define SRC_HARDWARE_H_

namespace hw {

	frc::Joystick* stick; // Declare that the robot has a Joystick. Don't actually bother defining it
	frc::Victor* flVictor; // Same thing, just with a Victor
	frc::Victor* frVictor; // etc.
	frc::Victor* rlVictor; // This is getting boring...
	frc::Victor* rrVictor; // You don't actually have to read this (or the 2 above it, for that matter)

	frc::Victor* bkVictor;

	frc::Victor* ballVic0;
	frc::Victor* ballVic1;

	frc::Encoder* flE;
	frc::Encoder* frE;
	frc::Encoder* rlE;
	frc::Encoder* rrE;

	frc::AnalogGyro* gyro;

	frc::Victor* uberDriver;
	frc::Victor* earpiece;

	frc::DigitalInput* lPhoto;
	frc::DigitalInput* rPhoto;

	frc::Relay* pneurelay;

	frc::Servo* grabServ;
}


void registerComponents(){ // Oh, here we actually define the hardware

	hw::stick = new frc::Joystick(0); // Initialize the joystick (see "Hardware.h")

	hw::flVictor = new frc::Victor(4); // Initializes the Victor at port 0 to be the Front Left
	hw::frVictor = new frc::Victor(1); // Initializes the Victor at port 1 to be the Front Right
	hw::rlVictor = new frc::Victor(2); // Initializes the Victor at port 2 to be the Rear Left
	hw::rrVictor = new frc::Victor(3); // Initializes the Victor at port 3 to be the Rear Right

	hw::bkVictor = new frc::Victor(9);

	hw::flE = new frc::Encoder(1, 0, false, Encoder::EncodingType::k2X);
	hw::frE = new frc::Encoder(2, 3, false, Encoder::EncodingType::k2X);
	hw::rlE = new frc::Encoder(4, 5, false, Encoder::EncodingType::k2X);
	hw::rrE = new frc::Encoder(6, 7, false, Encoder::EncodingType::k2X);

	hw::gyro = new frc::AnalogGyro(1);

	hw::uberDriver = new frc::Victor(4);
	hw::earpiece = new frc::Victor(5);

	hw::ballVic0 = new frc::Victor(9);

	hw::lPhoto = new DigitalInput(8);
	hw::rPhoto = new DigitalInput(9);

	hw::pneurelay = new frc::Relay(0);

	hw::grabserv = new frc::Servo(8);
}

#endif /* SRC_HARDWARE_H_ */
